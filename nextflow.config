/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    MTA Pipeline Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

plugins {
  id 'nf-schema@2.4.1'
}

process.container = "mta_pipe3"
docker.enabled = true

params {
  input = null // Set to path to Xenium data dirctory
  outputdir = "results"
  id = "sampleID"

  // Workflow options
  runRanger = true // Run XeniumRanger re-segmentation
  runBaysor = true // Run Baysor segmentation
  preset_splits = false // Use preset splits for parallel processing (default: false)
  runSegger = false // Run SEGGER segmentation

  // RESEGMENT_10X
  expansion_distance = 5
  boundary_stain= "disable" // Possible options are: "ATP1A1/CD45/E-Cadherin" (default) or "disable".
  interior_stain= "disable" // Possible options are: "18S" (default) or "disable".
  dapi_filter = 100

  // CALC SPLITS 
  csplit_x_bins = 2 // number of tiles along the x axis (total number of bins is product of x_bins * y_bins)
  csplit_y_bins = 2 // number of tiles along the y axis

  // BAYSOR
  baysor_m = 1 // Minimal number of molecules for a cell to be considered as real
  baysor_prior = 0.8 // Confidence of the prior_segmentation results. Value in [0; 1]
  baysor_min_trans = 100 // Minimum number of transcripts in a baysor chunk to perform segmentation on

  // SEGGER parameters
  format = 'xenium' // Platform type: xenium, cosmx, or merscope
  segger_num_tx_tokens = 0  // 0 = auto-detect, or set manually
  segger_knn_method = 'kd_tree' // KNN method for SEGGER
  segger_accelerator = 'gpu' // Accelerator type: cpu or gpu
  segger_tile_width = 200 // Tile width for SEGGER dataset creation
  segger_tile_height = 200 // Tile height for SEGGER dataset creation
  segger_batch_size = 1 // Batch size for SEGGER training/prediction
  segger_max_epochs = 100 // Maximum epochs for SEGGER training
  segger_devices = 1 // Number of devices for SEGGER training
  segger_cc_analysis = true // Use connected component analysis
  segger_area_low = 10
  segger_area_high = 100

  // Resource Mgmt
  rangersegCPUs = 32
  rangersegMem = 128
  filterCPUs = 10
  filterMem = 100
  baysorCPUs = 8
  baysorMem = 100
  rangerimportCPUs = 32
  rangerimportMem = 128
  seggerCreateCPUs = 16
  seggerCreateMem = 150
  seggerTrainCPUs = 16
  seggerTrainMem = 200
  seggerPredictCPUs = 16
  seggerPredictMem = 200
  seggerExplorerCPUs = 4
  seggerExplorerMem  = 16
}

process {
  withName: 'BAYSOR_PARALLEL:BAYSOR_RUN*' {
    errorStrategy = { task.exitStatus in 137 ? 'retry' : 'terminate' }   // Having memory issues with baysor...this might help
    maxRetries    = 1
    memory = { (params.baysorMem * task.attempt) + ' GB' }
    cpus = { params.baysorCPUs / task.attempt }
  }

// SEGGER processes configuration with GPU support
  withName: 'SEGGER_CREATE_DATASET' {
    container = 'danielunyi42/segger_dev:cuda121'
    containerOptions = '--gpus all --user root --shm-size 32G'
    cpus = params.seggerCreateCPUs
    memory = "${params.seggerCreateMem} GB"
    ext.tile_width = params.segger_tile_width
    ext.tile_height = params.segger_tile_height
  }
  
  withName: 'SEGGER_TRAIN' {
    container = 'danielunyi42/segger_dev:cuda121'
    containerOptions = '--gpus all --user root --shm-size 32G'
    cpus = params.seggerTrainCPUs
    memory = "${params.seggerTrainMem} GB"
    label = 'process_gpu'
    ext.batch_size = params.segger_batch_size
    ext.max_epochs = params.segger_max_epochs
    ext.devices = params.segger_devices
  }
  
  withName: 'SEGGER_PREDICT' {
    container = 'danielunyi42/segger_dev:cuda121'
    containerOptions = '--gpus all --user root --shm-size 32G'
    cpus = params.seggerPredictCPUs
    memory = "${params.seggerPredictMem} GB"
    label = 'process_gpu'  // Already has this label in the module
    ext.batch_size = params.segger_batch_size
    ext.cc_analysis = params.segger_cc_analysis
  }

  withName: 'SEGGER_EXPLORER' {
    container = 'danielunyi42/segger_dev:cuda121'
    containerOptions = '--gpus all --user root --shm-size 32G'
    ext.cells_filename = 'seg_cells'
    ext.analysis_filename = 'seg_analysis'
    ext.xenium_filename = 'seg_experiment.xenium'
    ext.cell_id_column = 'cell_id'
    ext.area_low = params.segger_area_low
    ext.area_high = params.segger_area_high
    }
}

